# Building the Liferay Mobile SDK

Once you've built and deployed the Guestbook portlet to your Liferay instance, 
you're ready to build the Liferay Mobile SDK. You might be asking yourself, "Why 
do I have to build it? Can't I just use the pre-built Mobile SDK that Liferay 
already provides?" Fantastic question! The reason is that the pre-built Mobile 
SDK provided by Liferay only includes classes for calling the remote services of 
Liferay's core portlets. This learning path calls the remote services of the 
custom Guestbook portlet developed in the [Liferay MVC learning path](/learning-paths/-/knowledge_base/6-2/beginning-liferay-development). 
To generate the classes required to call these services, you have to build the 
Mobile SDK. This is the case with any custom portlet. You must build the Mobile 
SDK if you want to use it to call your portlet's remote services. Now it's time 
to build!

## Building the Guestbook Portlet's WSDD

For the Mobile SDK Builder to discover the Guestbook portlet's remote services, 
you must first build the portlet's WSDD (Web Service Deployment Descriptor) 
file. Open the Guestbook portlet's `service.xml` file in Liferay IDE. In the 
Overview tab of `service.xml`, click the middle icon in the top right corner. 
This icon is highlighted in red in the following screenshot:

![Figure 1: Click the icon highlighted in red to build the Guestbook portlet's WSDD file.](../../images/build-wsdd.png)

Redeploy the Guestbook portlet once the WSDD build completes. Now you're ready 
to build the Mobile SDK.

## Building the Mobile SDK

To build the Mobile SDK, you first need to download its source code. You'll do 
this by using Git to clone the `liferay-mobile-sdk` project from GitHub. If your 
machine isn't set up to use Git, set it up by following [these instructions](https://help.github.com/articles/set-up-git/) 
on GitHub. Once you've set up Git, navigate to the directory you want to 
download the Mobile SDK to and clone it by running the following command. This 
creates the `liferay-mobile-sdk` directory and downloads the Mobile SDK to it: 

    git clone git@github.com:liferay/liferay-mobile-sdk.git

Once the clone completes you can generate a Mobile SDK for the Guestbook 
portlet. The Mobile SDK contains a convenient command line wizard for helping 
you with this step. To start it, navigate to the `liferay-mobile-sdk` directory 
and issue the following command:

    ./gradlew createModule

The wizard launches and then asks you to enter some properties for your project. 
You're first asked to provide the project's `Context` property. This needs to be 
set to the context path of the Guestbook portlet's remote services. To view the 
available remote service context paths for your portal, navigate to 
[http://localhost:8080/api/jsonws](http://localhost:8080/api/jsonws). On the 
page's upper left, there's a menu for selecting from the available context 
paths. Select *guestbook-portlet*. The UI updates to show you only the remote 
services available in that context path. 

![Figure 2: The guestbook-portlet context path on the server.](../../images/remote-services-context.png)

The Mobile SDK Builder needs this value so that it knows what remote services to 
generate classes and methods for. Return to the terminal and enter 
`guestbook-portlet` for the `Context` property. Next, you're asked for the 
build's `Package Name` property. This is the package path for the classes 
generated by the Mobile SDK Builder. Accept the default value of 
`com.liferay.mobile.android`. The last property the Mobile SDK Builder asks for 
is the `POM Description`. Technically, this is only really needed if you're 
planning to publish your generated SDK to Maven. However, since it's required 
for the build to run, enter `Guestbook Portlet SDK`. The following screenshot 
shows the `Context`, `Package Name`, and `POM Description` properties entered in 
the Mobile SDK Builder:

![Figure 3: The command line wizard for building the Mobile SDK.](../../images/mobile-sdk-build-wizard.png)

Upon entering the final property, the Mobile SDK Builder runs and generates a 
`BUILD SUCCESSFUL` message. At this point, you're probably wondering what just 
happened. The Mobile SDK Builder generated the source classes you'll use in your 
Android app to interact with the Guestbook portlet in your Liferay instance. 
You can find these source classes in the following directory of your 
`liferay-mobile-sdk` directory:

    modules/guestbook-portlet/android/src/gen/java

You should also note that the source classes are in the package path you 
specified during the build, with an additional directory that denotes the 
Liferay version. Therefore, the full path to the generated source 
classes is:

    modules/guestbook-portlet/android/src/gen/java/com/liferay/mobile/android/v62

Inside this directory are two subdirectories that correspond to each entity in 
the Guestbook portlet: `guestbook` and `entry`. It's here that you'll find the 
respective source class for each, `EntryService.java` and 
`GuestbookService.java`. There's just one last thing to take care of before you 
can use these classes in your Android app: put them in a `jar` file.

To do this, navigate to the `modules` directory on the command line and run 
`../../gradlew jar`. This command does two things: 

1. Generates a `jar` file with the Guestbook portlet's service classes. This is 
    in `liferay-mobile-sdk/modules/guestbook-portlet/build/libs`.

2. Generates a `jar` file for the rest of the Mobile SDK. This is in 
    `liferay-mobile-sdk/android/build/libs`.

Congratulations! You just built the Liferay Mobile SDK for the Guestbook 
portlet. Now that's an accomplishment worthy of writing down in a guestbook! All 
you need now is an Android app to install the Mobile SDK in. The next article in 
this learning path walks you through the steps of creating this app. 
