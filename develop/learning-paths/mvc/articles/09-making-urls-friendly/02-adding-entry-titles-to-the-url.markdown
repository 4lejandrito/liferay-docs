# Adding Entry Titles to the URL

After the last section on Friendly URLs, you have a good understanding of
Liferay's Frinedly URL pattern, from declaring your intentions in
`liferay-portlet.xml` to writing some quick routes in the
`guestbook-friendly-url-routes.xml`. If you noticed, however, the URLs are
still not entirely friendly. Look at the URL we now get when we click on one of
our Guestbook Entries:

    http://localhost:8080/web/guest/home/-/guestbook/10473/view_entry

It's quite a bit more concise and human-readable than before we started, but
we've included the Primary Key of the `Guestbook`, its `guestbookId`, in the
URL. This doesn't mean anything to the user. It would be more clear to see the
name of the Guestbook. That's what you'll be doing in this section on Frinedly
URLs.

## Creating a Finder

First, modify Liferay's descriptor, `docroot/WEB-INF/liferay-portlet.xml`, adding these lines right after the :

        <friendly-url-mapper-class>com.liferay.portal.kernel.portlet.DefaultFriendlyURLMapper</friendly-url-mapper-class>
		<friendly-url-mapping>guestbook</friendly-url-mapping>
		<friendly-url-routes>com/liferay/docs/guestbook/guestbook-friendly-url-routes.xml</friendly-url-routes>

        Bad thing about adding it first is tht you get errors in the log
        because questbook-friendly-url-routes.xml has not yet been created.

The `friendly-url-routes` tag lets us declare an XML file that contains, you
guessed it, URL routes that iwll relate to the Liferay URLs. In almost all
cases, the `friendly-url-mapper-class` you declare will be
`DefaultFriendlyURLMapper`. It contains the logic to map your Friendly URL
routes to Liferay URLs. The second tag we're declaring, `friendly-url-mapping`,
is just a name used to identify the routes. It will appear in the URL right
before the routes we declare.

## Something about using the finder to get Entries by the GuestbookName

## Adding the parameter to the URL in view.jsp

## Adding the routes to guestbook-friendly-url-routes.xml




Your Friendly URL is now ready to emerge from the beastly URL above. But while you're here, clean up the URLs for the other links as well. Follow these steps:

    1. Create
    `com/liferay/docs/guestbook/portlet/guestbook-friendly-routes.xml`. It's
    standard practice to create this file in the same package as the Portlet class.

    2. Add this code to the file:

        <?xml version="1.0"?>
        <!DOCTYPE routes PUBLIC "-//Liferay//DTD Friendly URL Routes 6.2.0//EN"
        "http://www.liferay.com/dtd/liferay-friendly-url-routes_6_2_0.dtd">

        <routes>
            <route>
                <pattern>/add_guestbook</pattern>
                <implicit-parameter name="p_p_lifecycle">0</implicit-parameter>
                <implicit-parameter name="mvcPath">/html/guestbook/edit_guestbook.jsp</implicit-parameter>
            </route>
            <route>
                <pattern>/{guestbookId}/add_entry</pattern>
                <implicit-parameter name="mvcPath">/html/guestbook/edit_entry.jsp</implicit-parameter>
            </route>
            <route>
                <pattern>/{entryId}/view_entry</pattern>
                <implicit-parameter name="p_p_lifecycle">0</implicit-parameter>
                <implicit-parameter name="mvcPath">/html/guestbook/view_entry.jsp</implicit-parameter>
            </route>
            <route>
                <pattern>/{guestbookId}/view</pattern>
                <implicit-parameter name="p_p_lifecycle">0</implicit-parameter>
                <implicit-parameter name="mvcPath">/html/guestbook/view.jsp</implicit-parameter>
            </route>
        </routes>

There are two tags from the XML to pay attention to. 

- The `pattern` tag is used to define placeholder values for the various fields
  that normally appear in the generated URL; in short, it's the disguise you're
putting on the beastly URL from the intro to make it more Friendly. When users
add a Guestbook, they shouldn't see every parameter generated by the portal in
the URL; you'drather they simply see `add_guestbook`. Similarly, when they add
a Guestbook Entry, you want them to see `add_entry`. But, we added another
interesting bit here: `{guestbookId}` Using this format, you can populate URLs
with data that we retrieve from the database. In this case, `guestbookId` is
available to use in our Friendly URL because it's already in the `addEntryURL`
in `docroot/html/view.jsp`:

    <portlet:param name="guestbookId"
			value="<%=String.valueOf(guestbookId)%>" />

-The `implicit-parameter` tag defines parameters that don't need to be
generated because they'll always be the same for this URL. All our URLs for
adding entities and viewing Guestbooks or Guestbook Entries are renderURLs, so
the portal doesn't need to generate the `p_p_lifecycle parameter`.  It can
automatically be assumed to be zero. If you remove this parameter from the the
route, the resulting Friendly URL won't look any different; you specified in
the pattern tag what should be displayed in place of the generated URL. But
it's nice to specify it here so the portal doesn't need to bother generating it
on the fly.

## Next Steps

[Creating Remote Services](/develop/learning-paths/-/knowledge_base/creating-remote-services)

