# Invoking Local Services

In this tutorial, you'll learn about the differences between local and remote
services, and when you should invoke local services rather than their remote
service counterparts.

Once Service Builder has generated your portlet project's services, you can call
them from anywhere in your application. When invoking a local service, you
should call one of the service methods of a `*LocalService` class. You can also
call the generated `*Util` classes from your module project, but these should be
avoided, if possible. You should never call the service methods of an `*Impl`
class directly. Local services in your project are generated automatically when
using Service Builder. To do this, set the `local-service` attribute to `true`
for an entity in the `service.xml` file. Service Builder generates methods that
call existing services, but you can create new methods in the
`*LocalServiceImpl` class that can be generated into new exposed methods in your
module's services (`*LocalService`, `*LocalServiceUtil`, etc.).

Many of Liferay's module applications use their generated remote services for
important calls in their controller layer, for example, because they offer
conveniences like configured permissions checking. Remote services perform a
permission check and then invoke the corresponding local service. However, there
are many services you'd like to expose only to your local project, and do not
want other applications to have access to.

In the Bookmarks application, for example, the
[BookmarksEntryLocalService](https://github.com/liferay/liferay-portal/blob/master/modules/apps/collaboration/bookmarks/bookmarks-api/src/main/java/com/liferay/bookmarks/service/BookmarksEntryLocalService.java)
interface provides the `openEntry` method, which opens a bookmark for viewing.
The remote service interface
[BookmarksEntryService](https://github.com/liferay/liferay-portal/blob/master/modules/apps/collaboration/bookmarks/bookmarks-api/src/main/java/com/liferay/bookmarks/service/BookmarksEntryService.java),
however, does not
provide this method. Why could this be?

There are many services that you don't want to expose to other applications in
Liferay. In the example mentioned above, Bookmarks are configured to only open
locally, meaning that other apps do not have access to open and view a bookmark
entry. This should only be done by the Bookmarks application. Therefore, in
certain cases, you'll need to invoke local services instead of remote services.
For more information on invoking remote services, see the
[Invoking Remote Services](/develop/tutorials/-/knowledge_base/7-0/invoking-remote-services)
tutorial.

The local service methods listed in the figure below are all generated by
Service Builder and can be called by the Bookmarks application locally.

![Figure 1: The Bookmarks application can access these methods of `BookmarksEntryLocalService`, many of which are CRUD operations.](../../../images/local-service-outline.png)

The `*LocalServiceUtil` classes call their injected `*LocalServiceImpl` classes.
This utility wraps the `*LocalServiceImpl` and is the primary access point for
service operations in application layer code running on the local server.
Methods of the `*LocalServiceUtil` do not have security checks based on the
propagated JAAS credentials because this service can only be accessed from
within the same VM.

This tutorial demonstrated how you can call the local services generated by
Service Builder in your project. To learn how to call Liferay services, see the
[Service Security Layers](/develop/tutorials/-/knowledge_base/7-0/service-security-layers)
and
[Finding and Invoking Liferay Services](/develop/tutorials/-/knowledge_base/7-0/finding-and-invoking-liferay-services)
tutorials.

## Related Topics

[Creating Local Services](/develop/tutorials/-/knowledge_base/7-0/creating-local-services)

[Creating Remote Services](/develop/tutorials/-/knowledge_base/7-0/creating-remote-services)

[Invoking Remote Services](/develop/tutorials/-/knowledge_base/7-0/invoking-remote-services)

